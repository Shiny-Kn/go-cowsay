
---
name: Build GO & Docker push
    
on:
  workflow_dispatch:
  push:
    tags: 'v*'

env:
  REGISTRY: docker.io
  IMAGE_NAME: kareemdev2/cowsaygo

jobs:
  build:
    name: build go code into binary
    strategy:
      matrix:
        arch:
          - amd64
          - arm64
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          Dockerfile
          main.go
          go.sum


    - name: Build the cowsay
      uses: actions/setup-go@v5
      with:
        go-version: '>=1.23'

    - run: go version
        
    - run: go build -o bin/cowsay main.go
      env:
        GOARCH: ${{ matrix.arch }}


    - name: Upload static files as artifact
      id: deployment
      uses: actions/upload-artifact@v4 # or specific "vX.X.X" version tag for this action
      with:
        path: bin/
        name: cowsaybin-${{ matrix.arch }}

# # Deploy job
#   deploy:
#     runs-on: self-hosted  # Utiliser un runner auto-hébergé

#     needs: build  # Le déploiement dépend du succès de l'étape build

#     steps:
#     - name: Download binary artifact
#       uses: actions/download-artifact@v3
#       with:
#         name: cowsay-binary
#         path: ./bin

#     - name: Deploy application on server
#       run: |
#           docker stop cowsay || true
#           docker rm cowsay || true
#           chmod +x ./bin/cowsay
#           nohup ./bin/cowsay &
          
          
  push-docker:
    name: push in dockerhub registry
    strategy:
      matrix:
        arch:
          - amd64
          - arm64
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: .
          name: cowsaybin-${{ matrix.arch }}

      - run: |
          pwd
          ls -alh

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.arch }}
          tags: |
            type=schedule,pattern={{date 'YYYYMMDD'}}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME_Karim }}
          password: ${{ secrets.DOCKERHUB_TOKEN_Karim }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/${{ matrix.arch }}       

 
